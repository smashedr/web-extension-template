name: build

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  SRC_DIR: "src"
  MANIFEST: "manifest.json"

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup Node 18"
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: "Node Install"
        run: npm install

      - name: "Parse Manifest"
        id: manifest
        run: |
          echo "Parsing Variables"
          _locale=$(jq -r '.default_locale' < "${_src_dir}/manifest.json")
          echo "_locale: ${_locale}"
          _name=$(jq -r '.name' < "${_src_dir}/manifest.json")
          if [ "${_locale}" != "null" ];then
            _name_key=$(echo  "${_name}" | sed 's/^__MSG_//' | sed 's/__$//')
            _name=$(jq -r ".${_name_key}.message" < "${_src_dir}/_locales/${_locale}/messages.json")
          fi
          echo "_name: ${_name}"
          _package_name=$(echo "${_name// /_}" | tr '[:upper:]' '[:lower:]')
          echo "_package_name: ${_package_name}"
          _version=$(jq -r '.version' < "${_src_dir}/manifest.json")
          echo "_version: ${_version}"
          _full_name="${_package_name}_${_version}"
          echo "_full_name: ${_full_name}"
          echo "version=${_version}" >> "$GITHUB_OUTPUT"
          echo "package_name=${_package_name}" >> "$GITHUB_OUTPUT"
          
          # # export version="$(jq '.version' < ${{ env.MANIFEST }})"
          # echo "version=$(jq '.version' < ${{ env.MANIFEST }})" >> "$GITHUB_OUTPUT"
          # export name="$(jq '.name' < ${{ env.MANIFEST }} | tr '[:upper:]' '[:lower:]')"
          # echo "package_name=${name// /_}" >> "$GITHUB_OUTPUT"

      - name: "Release Manifest Version Check"
        if: ${{ github.event_name == 'release' }}
        run: |
          if [ "${{ github.ref_name }}" != ${{ steps.manifest.outputs.version }} ];then
            echo "Manifest Version ${{ steps.manifest.outputs.version }} does not match release tag ${{ github.ref_name }}"
            exit 1
          fi

      - name: "Create Chrome ZIP Archives"
        run: |
          npm run chrome
          mkdir -p web-ext-artifacts
          zip "web-ext-artifacts/${{ steps.manifest.outputs.package_name }}-chrome-${{ steps.manifest.outputs.version }}.zip" -r "${{ env.SRC_DIR }}"

#      - name: "Setup Chrome"
#        id: setup-chrome
#        uses: browser-actions/setup-chrome@v1
#        with:
#          chrome-version: "1191187"
#
#      - name: "Build Chrome"
#        run: |
#          echo "${{ secrets.CHROME_PRIVATE_KEY }}" > .key
#          echo Installed chromium version: ${{ steps.setup-chrome.outputs.chrome-version }}
#          ${{ steps.setup-chrome.outputs.chrome-path }} --version
#          ${{ steps.setup-chrome.outputs.chrome-path }} --pack-extension=./src --pack-extension-key=.key
#          mv src.crx web-ext-artifacts/${{ steps.manifest.outputs.package_name }}-${{ steps.manifest.outputs.version }}.crx

      - name: "Create Firefox ZIP Archives"
        run: |
          npm run firefox
          mkdir -p web-ext-artifacts
          zip "web-ext-artifacts/${{ steps.manifest.outputs.package_name }}-firefox-${{ steps.manifest.outputs.version }}.zip" -r "${{ env.SRC_DIR }}"

#      - name: "Build Firefox"
#        id: web-ext-build
#        uses: kewisch/action-web-ext@v1
#        with:
#          cmd: build
#          source: src
#          filename: "{name}-{version}.xpi"

      - name: "Archive Artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: web-ext-artifacts/

      - name: "Upload Artifacts to Release"
        if: ${{ github.event_name == 'release' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: web-ext-artifacts/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

#      - name: "Upload to Mozilla Addons"
#        # https://github.com/marketplace/actions/firefox-addon-action
#        if: ${{ github.event_name == 'release' }}
#        uses: trmcnvn/firefox-addon@v1
#        with:
#          uuid: link-extractor@cssnr.com
#          xpi: web-ext-artifacts/${{ steps.manifest.outputs.package_name }}-${{ steps.manifest.outputs.version }}.xpi
#          manifest: src/manifest.json
#          api-key: ${{ secrets.FIREFOX_API_KEY }}
#          api-secret: ${{ secrets.FIREFOX_API_SECRET }}
#
#      - name: "Upload to Chrome Web Store"
#        # https://github.com/marketplace/actions/chrome-extension-upload-action
#        if: ${{ github.event_name == 'release' }}
#        uses: mnao305/chrome-extension-upload@v4.0.1
#        with:
#          file-path: web-ext-artifacts/${{ steps.manifest.outputs.package_name }}-${{ steps.manifest.outputs.version }}.zip
#          extension-id: ifefifghpkllfibejafbakmflidjcjfp
#          client-id: ${{ secrets.CLIENT_ID }}
#          client-secret: ${{ secrets.CLIENT_SECRET }}
#          refresh-token: ${{ secrets.REFRESH_TOKEN }}
